points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind, lty = 2, lwd = 2))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,
| 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
ls()
rm(list = (ls()))
ls()
q()
library(swirl)
ls()
rm(list = ls())
ls()
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple
| Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
swirl()
> myedit("plot1.R")
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
ls()
rm(list = ls())
ls()
rm(list = ls())
ls()
library(swirl)
swirl()
sample(colors, 10)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0, 1, len =6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(2))
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, rgb(0, 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols())
showMe(cols)
pal <- colorRampPalette(cols)
show(pal(20))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
g <- ggplot(aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(size = 2, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim= c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs (x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, colors = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd, ]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(data = diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
library(lnme)
install.packages("nlme")
library(lnme)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data("airquality")
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
q()
ls()
rm(list = ls())
ls()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
play
play()
plot(hc)
plot(as.dendrogram(hc))
nxt()
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
ls()
rm(list = ls())
ls()
q()
ls()
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, 3)
kmObj$iter
points(x, y, col = kmObj$cluster, pch = 19, cex = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
points(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[, 1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[, 1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[, 1]) * (svd1$d[1]) %*% t(svd1$v[, 1])
a1 <- (svd1$u[, 1] * svd1$d[1]) %*% t(svd1$v[, 1])
myImage(a1)
a2 <- svd1$u[, 1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[, 1:2])
myImage(a2)
myImage(svd1$u[, 1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5]))
myImage(svd1$u[, 1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[, 1:10]))
dim(ssd)
names(ssd[, 562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
mdist <- dist(sub1 [, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
ls()
rm(list = ls())
ls()
q()
ls()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]] [wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]] [wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0a)
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cn10, cnt1$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date, "%Y%m%d"))
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d"))
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state == names(mn0), mean == mn0)
d0 <- data.frame(mn0$state == names(mn0), mean == mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(0.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
ls()
rm(list = ls())
ls()
q()
q()
q()
ls()
class(activityAll)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
view(totalStepsByDay)
View(totalStepsByDay)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
tail(avgStepsByInterval)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
summary(avgStepsByInterval)
maxInterval <- pmax(avgStepsByInterval$avgSteps)
maxInterval
View(avgStepsByInterval)
maxInterval <- max(avgStepsByInterval$avgSteps)
maxInterval
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
maxInterval
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
summary(activityAllDfTbl)
test <- is.na(steps)
test <- is.na(activityAllDfTbl$steps)
test
test <- which(test)
test
dim(test)
length(test)
test <- length(which(is.na(activityAllDfTbl$steps)))
test
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
NAs <- is.na(activityAllDfTbl$steps)
head(NAs)
test <- if(is.na(activityAllDfTbl)) {}
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
imputed
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
imputed
NAs <- is.na(activityAllDfTbl$steps)
class(NAs)
head(NAs)
tail(NAs)
NAs
activityAllDfTbl[289]
activityAllDfTbl[289, ]
test <- match(is.na(activityAllDfTbl$steps), activityAllDfTbl)
test
test <- which()
library(sqldf)
test <- is.na.data.frame(activityAllDfTbl)
test
head(test)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
head(imputed)
x <- activityAllDfTbl(1, "steps")
x <- activityAllDfTbl[1, "steps"]
x
is.na(x)
imputed
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(imputed)
head(imputed)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(y)
z <- as.integer(y)
class(z)
z
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(s)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(s)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(imputed)
head(imputed)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(imputed)
head(imputed)
seq_along(activityAllDfTbl)
dim(activityAllDfTbl)
count(activityAllDfTbl)
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(imputed)
head(imputed)
s
source('~/Documents/DataScience_JH/ReproducibleResearch/project1/RepData_PeerAssessment1/analysis.R')
class(imputed)
head(imputed)
q()
q()
q()
q()
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
length(cleanEVTYPE)
length(origEVTYPE)
length(stormDataDfTbl$EVTYPE)
weathers <- filter(newStormDataDfTbl, cleanEVTYPE == "WINTER WEATHERS")
weathers
cleanEVTYPE <- cleanUp("WINTER WEATHERS", "WINTER WEATHER", cleanEVTYPE)
getFactorLevels(cleanEVTYPE)
extreme <- filter(newStormDataDfTbl, cleanEVTYPE == "extreme cold1/wind\n                       chill")
extreme
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
qplot(cleanEVTYPE, HEALTH, data = healthEvents)
qplot(cleanEVTYPE, HEALTH, data = healthEvents, geom = "boxplot")
qplot(cleanEVTYPE, HEALTH, data = healthEvents)
health <- ggplot(healthEvents, aes(cleanEVTYPE, HEALTH))
health <- health + geom_point() + labs(x = "Event", y = "Number of Fatalities and Injuries", title = "Weather Events with Greatest Health Impacts")
print(health)
source('~/Documents/DataScience_JH/ReproducibleResearch/project2/code2.R')
head(healthEvents)
health <- ggplot(head(healthEvents,5), aes(cleanEVTYPE, HEALTH))
health <- health + geom_point() + labs(y = "Number of Fatalities & Injuries", x =)
health <- health + geom_point() + labs(y = "Number of Fatalities & Injuries", x = "Events", title = "Weather Events with Greatest Health Impacts")
print(health)
print(economic)
q()
